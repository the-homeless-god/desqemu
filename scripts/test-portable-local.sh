#!/bin/bash

echo "üß™ DESQEMU Portable Local Test"
echo "=============================="

# Detect architecture
ARCH=$(uname -m)
case $ARCH in
    x86_64)
        DOWNLOAD_ARCH="x86_64"
        ;;
    aarch64|arm64)
        DOWNLOAD_ARCH="aarch64"
        ;;
    *)
        echo "‚ùå –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: $ARCH"
        echo "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è: x86_64, aarch64, arm64"
        exit 1
        ;;
esac

echo "üñ•Ô∏è  –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É: $DOWNLOAD_ARCH"

# Build portable archive
echo ""
echo "üî® –°–æ–∑–¥–∞–µ–º –ø–æ—Ä—Ç–∞—Ç–∏–≤–Ω—ã–π –∞—Ä—Ö–∏–≤..."
if [ ! -f "scripts/build-portable.sh" ]; then
    echo "‚ùå –°–∫—Ä–∏–ø—Ç scripts/build-portable.sh –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    echo "–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞ DESQEMU"
    exit 1
fi

scripts/build-portable.sh "$DOWNLOAD_ARCH"

# Test archive
ARCHIVE="desqemu-portable-microvm-$DOWNLOAD_ARCH.tar.gz"
if [ ! -f "$ARCHIVE" ]; then
    echo "‚ùå –ê—Ä—Ö–∏–≤ $ARCHIVE –Ω–µ —Å–æ–∑–¥–∞–Ω!"
    exit 1
fi

echo ""
echo "üì¶ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞—Ä—Ö–∏–≤..."
echo "üìä –†–∞–∑–º–µ—Ä –∞—Ä—Ö–∏–≤–∞: $(du -h $ARCHIVE | cut -f1)"

# Create test directory
TEST_DIR="test-portable-$DOWNLOAD_ARCH"
rm -rf "$TEST_DIR"
mkdir "$TEST_DIR"
cd "$TEST_DIR"

# Extract archive
echo "üì¶ –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º –∞—Ä—Ö–∏–≤..."
tar -xzf "../$ARCHIVE"

if [ ! -d "$DOWNLOAD_ARCH" ]; then
    echo "‚ùå –ê—Ä—Ö–∏–≤ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é $DOWNLOAD_ARCH!"
    exit 1
fi

cd "$DOWNLOAD_ARCH"

# Check files
echo ""
echo "üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∞—Ä—Ö–∏–≤–∞..."
REQUIRED_FILES=(
    "start-microvm.sh"
    "stop-microvm.sh" 
    "check-status.sh"
    "README.md"
    "alpine-vm.qcow2"
    "bzImage"
    "initramfs-virt"
)

for file in "${REQUIRED_FILES[@]}"; do
    if [ -f "$file" ]; then
        echo "‚úÖ $file"
    else
        echo "‚ùå $file –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!"
        exit 1
    fi
done

# Check QEMU binaries
if [ -d "bin" ]; then
    QEMU_COUNT=$(find bin -name "qemu-*" | wc -l)
    echo "‚úÖ bin/ (–Ω–∞–π–¥–µ–Ω–æ $QEMU_COUNT QEMU –±–∏–Ω–∞—Ä–Ω–∏–∫–æ–≤)"
else
    echo "‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è bin/ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!"
    exit 1
fi

# Check if scripts are executable
for script in start-microvm.sh stop-microvm.sh check-status.sh; do
    if [ -x "$script" ]; then
        echo "‚úÖ $script –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π"
    else
        echo "‚ùå $script –Ω–µ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π!"
        exit 1
    fi
done

echo ""
echo "üéâ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã!"
echo ""
echo "üöÄ –î–ª—è –∑–∞–ø—É—Å–∫–∞ –º–∏–∫—Ä–æ–≤–º:"
echo "  cd test-portable-$DOWNLOAD_ARCH/$DOWNLOAD_ARCH"
echo "  ./start-microvm.sh"
echo ""
echo "üìù –ü–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ –¥–æ—Å—Ç—É–ø –ø–æ:"
echo "  VNC: localhost:5900 (–ø–∞—Ä–æ–ª—å: desqemu)"
echo "  SSH: ssh desqemu@localhost -p 2222"
echo "  Web: http://localhost:8080"
echo ""
echo "üõë –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏:"
echo "  ./stop-microvm.sh"

# Go back to root
cd "../.."

echo ""
echo "üßπ –î–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤:"
echo "  rm -rf $TEST_DIR $ARCHIVE install-desqemu-portable-$DOWNLOAD_ARCH.sh" 
