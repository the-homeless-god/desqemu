#!/bin/bash

# ============================================================================
# üöÄ DESQEMU Desktop App Generator
# ============================================================================
# –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –≥–æ—Ç–æ–≤–æ–µ desktop –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–∑ Docker Compose —Ñ–∞–π–ª–∞
# ============================================================================

set -euo pipefail

# –¶–≤–µ—Ç–∞ –¥–ª—è –ª–æ–≥–æ–≤
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã
APP_NAME="${1:-}"
COMPOSE_FILE="${2:-}"
APP_DESCRIPTION="${3:-Desktop Application}"
DEFAULT_PORT="${4:-8080}"

if [[ -z "$APP_NAME" || -z "$COMPOSE_FILE" ]]; then
    log_error "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <app-name> <compose-file> [description] [port]"
    log_info "–ü—Ä–∏–º–µ—Ä: $0 penpot-desktop docker-compose.yml 'Penpot Design Tool' 9001"
    exit 1
fi

if [[ ! -f "$COMPOSE_FILE" ]]; then
    log_error "Docker Compose —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: $COMPOSE_FILE"
    exit 1
fi

# –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞–±–æ—á–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
WORK_DIR="build/desktop-apps"
APP_DIR="$WORK_DIR/$APP_NAME"

log_info "üèóÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ desktop –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: $APP_NAME"
log_info "üìÅ –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $APP_DIR"

# –û—á–∏—Å—Ç–∫–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
rm -rf "$APP_DIR"
mkdir -p "$APP_DIR"

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞
log_info "üìã –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ Neutralino..."
cp -r templates/neutralino-app/* "$APP_DIR/"

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ –∏–∫–æ–Ω–∫–∏ –∏–∑ compose —Ñ–∞–π–ª–∞
APP_TYPE=$(grep -E "image:|container_name:" "$COMPOSE_FILE" | head -1 | grep -oE "[a-zA-Z]+" | head -1 || echo "webapp")
APP_ID=$(echo "$APP_NAME" | sed 's/-//g' | tr '[:upper:]' '[:lower:]')
APP_TITLE="DESQEMU Desktop - $(echo "$APP_TYPE" | sed 's/./\U&/')"

log_info "üîß –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:"
log_info "   ‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ: $APP_NAME"
log_info "   ‚Ä¢ –¢–∏–ø: $APP_TYPE"
log_info "   ‚Ä¢ ID: $APP_ID"
log_info "   ‚Ä¢ –ü–æ—Ä—Ç: $DEFAULT_PORT"

# –ó–∞–º–µ–Ω–∞ –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–æ–≤ –≤ —Ñ–∞–π–ª–∞—Ö
log_info "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."

# package.json
sed -i.bak \
    -e "s/{{APP_NAME}}/$APP_NAME/g" \
    -e "s/{{APP_DESCRIPTION}}/$APP_DESCRIPTION/g" \
    -e "s/{{APP_TYPE}}/$APP_TYPE/g" \
    "$APP_DIR/package.json" && rm "$APP_DIR/package.json.bak"

# neutralino.config.json
sed -i.bak \
    -e "s/{{APP_NAME}}/$APP_NAME/g" \
    -e "s/{{APP_ID}}/$APP_ID/g" \
    -e "s/{{APP_TYPE}}/$APP_TYPE/g" \
    -e "s/{{APP_TITLE}}/$APP_TITLE/g" \
    -e "s/{{DEFAULT_PORT}}/$DEFAULT_PORT/g" \
    "$APP_DIR/neutralino.config.json" && rm "$APP_DIR/neutralino.config.json.bak"

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ Docker Compose —Ñ–∞–π–ª–∞
log_info "üê≥ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ Docker Compose –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
cp "$COMPOSE_FILE" "$APP_DIR/resources/docker-compose.yml"

# –°–æ–∑–¥–∞–Ω–∏–µ QCOW2 –æ–±—Ä–∞–∑–∞ —Å –ø–æ–º–æ—â—å—é —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤
log_info "üíø –°–æ–∑–¥–∞–Ω–∏–µ QCOW2 –æ–±—Ä–∞–∑–∞ –∏–∑ Docker Compose..."
mkdir -p "$APP_DIR/resources/qcow2"

# –°–±–æ—Ä–∫–∞ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ Docker –æ–±—Ä–∞–∑–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º compose —Ñ–∞–π–ª–æ–º
log_info "üê≥ –°–±–æ—Ä–∫–∞ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ Alpine –æ–±—Ä–∞–∑–∞..."

# –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ Dockerfile –¥–ª—è —ç—Ç–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
cat > "$APP_DIR/Dockerfile" << EOF
# –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–∞–∑–æ–≤—ã–π DESQEMU Alpine –æ–±—Ä–∞–∑
FROM alpine:3.19

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–∑–æ–≤—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
RUN apk add --no-cache \\
    docker \\
    docker-compose \\
    podman \\
    bash \\
    curl \\
    wget

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ Docker Compose –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
COPY resources/docker-compose.yml /app/docker-compose.yml

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞
RUN echo '#!/bin/sh' > /usr/local/bin/start-app.sh && \\
    echo 'cd /app' >> /usr/local/bin/start-app.sh && \\
    echo 'docker-compose up -d' >> /usr/local/bin/start-app.sh && \\
    echo 'tail -f /dev/null' >> /usr/local/bin/start-app.sh && \\
    chmod +x /usr/local/bin/start-app.sh

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
CMD ["/usr/local/bin/start-app.sh"]
EOF

# –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞
DOCKER_IMAGE="desqemu-$APP_NAME:latest"
if command -v docker >/dev/null 2>&1; then
    log_info "üî® –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞: $DOCKER_IMAGE"
    cd "$APP_DIR"
    docker build -t "$DOCKER_IMAGE" . >/dev/null 2>&1 || {
        log_warning "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑, —Å–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫—É"
        echo "# QCOW2 –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –≤ –ø–∞–π–ø–ª–∞–π–Ω–µ –∏–∑ –±–∞–∑–æ–≤–æ–≥–æ –æ–±—Ä–∞–∑–∞" > "resources/qcow2/README.md"
        cd - >/dev/null
        return 0
    }
    cd - >/dev/null

    # –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è Docker ‚Üí QCOW2
    log_info "üîÑ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è Docker –æ–±—Ä–∞–∑–∞ –≤ QCOW2..."
    if [[ -x "scripts/docker-to-qcow2.sh" ]]; then
        chmod +x scripts/docker-to-qcow2.sh
        scripts/docker-to-qcow2.sh "$DOCKER_IMAGE" "$APP_DIR/resources/qcow2/app.qcow2" "4G" || {
            log_warning "‚ö†Ô∏è –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å, —Å–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫—É"
            echo "# QCOW2: $DOCKER_IMAGE" > "$APP_DIR/resources/qcow2/README.md"
        }
    else
        log_warning "‚ö†Ô∏è –°–∫—Ä–∏–ø—Ç docker-to-qcow2.sh –Ω–µ –Ω–∞–π–¥–µ–Ω"
        echo "# QCOW2: $DOCKER_IMAGE (–±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –≤ –ø–∞–π–ø–ª–∞–π–Ω–µ)" > "$APP_DIR/resources/qcow2/README.md"
    fi

    # –û—á–∏—Å—Ç–∫–∞ Docker –æ–±—Ä–∞–∑–∞
    docker rmi "$DOCKER_IMAGE" >/dev/null 2>&1 || true
else
    log_warning "‚ö†Ô∏è Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, QCOW2 –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –≤ –ø–∞–π–ø–ª–∞–π–Ω–µ"
    echo "# QCOW2 –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –≤ –ø–∞–π–ø–ª–∞–π–Ω–µ –∏–∑ $COMPOSE_FILE" > "$APP_DIR/resources/qcow2/README.md"
fi

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ HTML –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
log_info "üé® –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞..."
sed -i.bak \
    -e "s/Penpot Desktop/$APP_DESCRIPTION/g" \
    -e "s/penpot/$APP_TYPE/g" \
    "$APP_DIR/resources/index.html" && rm "$APP_DIR/resources/index.html.bak"

# –°–æ–∑–¥–∞–Ω–∏–µ README –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
log_info "üìñ –°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏..."
cat > "$APP_DIR/README.md" << EOF
# üöÄ $APP_NAME

$APP_DESCRIPTION - Desktop –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –±–∞–∑–µ DESQEMU & Neutralino.js

## üèÉ‚Äç‚ôÇÔ∏è –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç

\`\`\`bash
# –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
npm run dev

# –°–±–æ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
npm run build

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–∫–µ—Ç–∞
npm run package
\`\`\`

## üìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞

- \`resources/\` - –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
- \`resources/qcow2/\` - QCOW2 –æ–±—Ä–∞–∑—ã —Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º
- \`resources/docker-compose.yml\` - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤
- \`bin/\` - Neutralino –±–∏–Ω–∞—Ä–Ω–∏–∫–∏

## üîß –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è

- **–¢–∏–ø**: $APP_TYPE
- **–ü–æ—Ä—Ç**: $DEFAULT_PORT
- **ID**: $APP_ID

–°–æ–∑–¥–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å –ø–æ–º–æ—â—å—é DESQEMU Desktop App Generator
EOF

log_success "‚úÖ Desktop –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ: $APP_DIR"
log_info "üì¶ –î–ª—è —Å–±–æ—Ä–∫–∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: npm run build"
log_info "üöÄ –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: npm run dev"

# –ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞–∑–º–µ—Ä
APP_SIZE=$(du -sh "$APP_DIR" | cut -f1)
log_success "üìä –†–∞–∑–º–µ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: $APP_SIZE" 
