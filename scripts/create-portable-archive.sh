#!/bin/bash

set -e

ARCHITECTURE="$1"
if [ -z "$ARCHITECTURE" ]; then
    echo "‚ùå –ù–µ —É–∫–∞–∑–∞–Ω–∞ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞"
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <architecture>"
    exit 1
fi

echo "üöÄ –°–æ–∑–¥–∞–µ–º –ø–æ—Ä—Ç–∞—Ç–∏–≤–Ω—ã–π –∞—Ä—Ö–∏–≤ QEMU –¥–ª—è $ARCHITECTURE..."

# Create portable structure
mkdir -p "desqemu-portable/$ARCHITECTURE"
cd "desqemu-portable/$ARCHITECTURE"

# Copy QEMU binaries
if [ -d "../../qemu-portable/$ARCHITECTURE/usr/bin" ]; then
    mkdir -p bin
    cp -r "../../qemu-portable/$ARCHITECTURE/usr/bin/"* bin/ 2>/dev/null || true
    echo "‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã QEMU –±–∏–Ω–∞—Ä–Ω–∏–∫–∏"
fi

if [ -d "../../qemu-portable/$ARCHITECTURE/usr/libexec" ]; then
    mkdir -p libexec  
    cp -r "../../qemu-portable/$ARCHITECTURE/usr/libexec/"* libexec/ 2>/dev/null || true
    echo "‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã QEMU libexec"
fi

if [ -d "../../qemu-portable/$ARCHITECTURE/usr/share/qemu" ]; then
    mkdir -p share/qemu
    cp -r "../../qemu-portable/$ARCHITECTURE/usr/share/qemu/"* share/qemu/ 2>/dev/null || true
    echo "‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã QEMU –¥–∞–Ω–Ω—ã–µ"
fi

# Copy microvm files
if [ -f "../../alpine-vm.qcow2" ]; then
    cp "../../alpine-vm.qcow2" ./
    echo "‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω alpine-vm.qcow2"
fi

if [ -f "../../kernel/bzImage" ]; then
    cp "../../kernel/bzImage" ./
    echo "‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω kernel/bzImage"
fi

if [ -f "../../initramfs-virt" ]; then
    cp "../../initramfs-virt" ./
    echo "‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω initramfs-virt"
fi

# Create startup scripts
cat > start-microvm.sh << 'EOF'
#!/bin/bash

echo "üöÄ DESQEMU Portable MicroVM Launcher"
echo "===================================="

# Get script directory
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# Set QEMU paths
export PATH="$SCRIPT_DIR/bin:$PATH"
export QEMU_SYSTEM_DIR="$SCRIPT_DIR/libexec"

# Default parameters
MEMORY=${MEMORY:-512M}
CPU_CORES=${CPU_CORES:-2}
VNC_PORT=${VNC_PORT:-5900}
SSH_PORT=${SSH_PORT:-2222}
WEB_PORT=${WEB_PORT:-8080}

echo "üíæ –ü–∞–º—è—Ç—å: $MEMORY"
echo "üîß CPU —è–¥–µ—Ä: $CPU_CORES" 
echo "üåê VNC –ø–æ—Ä—Ç: $VNC_PORT"
echo "üîê SSH –ø–æ—Ä—Ç: $SSH_PORT"
echo "üåç Web –ø–æ—Ä—Ç: $WEB_PORT"
echo ""

# Check if qemu-system-x86_64 exists
if ! command -v qemu-system-x86_64 >/dev/null 2>&1; then
    echo "‚ùå QEMU –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ $SCRIPT_DIR/bin"
    echo "–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –∞—Ä—Ö–∏–≤ —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ"
    exit 1
fi

# Check if VM file exists
if [ ! -f "$SCRIPT_DIR/alpine-vm.qcow2" ]; then
    echo "‚ùå –§–∞–π–ª alpine-vm.qcow2 –Ω–µ –Ω–∞–π–¥–µ–Ω"
    echo "–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –∞—Ä—Ö–∏–≤ —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ"
    exit 1
fi

echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–∫—Ä–æ–≤–º..."
echo "üìù VNC –ø–∞—Ä–æ–ª—å: desqemu"
echo "üîê SSH: ssh desqemu@localhost -p $SSH_PORT"
echo "üåê Web: http://localhost:$WEB_PORT"
echo ""
echo "–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C"
echo ""

# Launch QEMU
qemu-system-x86_64 \
  -enable-kvm \
  -machine q35,accel=kvm:tcg \
  -cpu host \
  -smp $CPU_CORES \
  -m $MEMORY \
  -drive file="$SCRIPT_DIR/alpine-vm.qcow2",format=qcow2,if=virtio \
  -kernel "$SCRIPT_DIR/bzImage" \
  -initrd "$SCRIPT_DIR/initramfs-virt" \
  -append "console=ttyS0 root=/dev/vda1 rw quiet" \
  -netdev user,id=net0,hostfwd=tcp::$SSH_PORT-:22,hostfwd=tcp::$WEB_PORT-:8080 \
  -device virtio-net-pci,netdev=net0 \
  -vnc :$(($VNC_PORT - 5900)) \
  -vga virtio \
  -display vnc \
  -daemonize \
  -pidfile "$SCRIPT_DIR/qemu.pid" \
  -serial stdio
EOF

chmod +x start-microvm.sh

cat > stop-microvm.sh << 'EOF'
#!/bin/bash

echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º DESQEMU MicroVM..."

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PID_FILE="$SCRIPT_DIR/qemu.pid"

if [ -f "$PID_FILE" ]; then
    PID=$(cat "$PID_FILE")
    if kill -0 "$PID" 2>/dev/null; then
        echo "üîÑ –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å QEMU (PID: $PID)..."
        kill "$PID"
        rm -f "$PID_FILE"
        echo "‚úÖ MicroVM –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
    else
        echo "‚ö†Ô∏è  –ü—Ä–æ—Ü–µ—Å—Å QEMU —É–∂–µ –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        rm -f "$PID_FILE"
    fi
else
    echo "‚ö†Ô∏è  PID —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω. –í–æ–∑–º–æ–∂–Ω–æ MicroVM —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
fi
EOF

chmod +x stop-microvm.sh

cat > check-status.sh << 'EOF'
#!/bin/bash

echo "üìä DESQEMU MicroVM Status"
echo "========================"

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PID_FILE="$SCRIPT_DIR/qemu.pid"

if [ -f "$PID_FILE" ]; then
    PID=$(cat "$PID_FILE")
    if kill -0 "$PID" 2>/dev/null; then
        echo "‚úÖ MicroVM –∑–∞–ø—É—â–µ–Ω–∞ (PID: $PID)"
        echo "üåê VNC: localhost:5900"
        echo "üîê SSH: ssh desqemu@localhost -p 2222"  
        echo "üåç Web: http://localhost:8080"
    else
        echo "‚ùå MicroVM –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞"
        rm -f "$PID_FILE"
    fi
else
    echo "‚ùå MicroVM –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞"
fi
EOF

chmod +x check-status.sh

# Create README
cat > README.md << EOF
# üöÄ DESQEMU Portable MicroVM

–ü–æ—Ä—Ç–∞—Ç–∏–≤–Ω–∞—è –º–∏–∫—Ä–æ–≤–º —Å Alpine Linux + Podman + Chromium.
–ù–µ —Ç—Ä–µ–±—É–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ QEMU - –≤—Å–µ –≤–∫–ª—é—á–µ–Ω–æ –≤ –∞—Ä—Ö–∏–≤!

## üéØ –ß—Ç–æ –≤–∫–ª—é—á–µ–Ω–æ:

- **QEMU** - —ç–º—É–ª—è—Ç–æ—Ä –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã—Ö –º–∞—à–∏–Ω
- **Alpine Linux MicroVM** - –≥–æ—Ç–æ–≤–∞—è –º–∏–∫—Ä–æ–≤–º
- **Podman + Docker CLI** - –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
- **Chromium** - –≤–µ–±-–±—Ä–∞—É–∑–µ—Ä
- **VNC + SSH** - —É–¥–∞–ª–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø

## üöÄ –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫:

\`\`\`bash
# –ó–∞–ø—É—Å—Ç–∏—Ç—å –º–∏–∫—Ä–æ–≤–º
./start-microvm.sh

# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å
./check-status.sh

# –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–∏–∫—Ä–æ–≤–º
./stop-microvm.sh
\`\`\`

## üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞:

–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è \`start-microvm.sh\`:

\`\`\`bash
# –ò–∑–º–µ–Ω–∏—Ç—å –ø–∞–º—è—Ç—å (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 512M)
MEMORY=1G ./start-microvm.sh

# –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —è–¥–µ—Ä (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 2)
CPU_CORES=4 ./start-microvm.sh

# –ò–∑–º–µ–Ω–∏—Ç—å –ø–æ—Ä—Ç—ã
VNC_PORT=5901 SSH_PORT=2223 WEB_PORT=8081 ./start-microvm.sh
\`\`\`

## üåê –î–æ—Å—Ç—É–ø:

–ü–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ –º–∏–∫—Ä–æ–≤–º –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å–∞–º:

- **VNC:** localhost:5900 (–ø–∞—Ä–æ–ª—å: desqemu)
- **SSH:** ssh desqemu@localhost -p 2222 (–ø–∞—Ä–æ–ª—å: desqemu)
- **Web:** http://localhost:8080

## üìã –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è:

- Linux $ARCHITECTURE
- 1+ GB —Å–≤–æ–±–æ–¥–Ω–æ–π –ø–∞–º—è—Ç–∏
- KVM –ø–æ–¥–¥–µ—Ä–∂–∫–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, –¥–ª—è –ª—É—á—à–µ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏)

## üÜò –£—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º:

\`\`\`bash
# –ï—Å–ª–∏ –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Å KVM, –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ start-microvm.sh:
# –ó–∞–º–µ–Ω–∏—Ç–µ: -enable-kvm -machine q35,accel=kvm:tcg
# –ù–∞: -machine q35,accel=tcg

# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø–æ—Ä—Ç–æ–≤:
netstat -tuln | grep -E ':(5900|2222|8080)'

# –õ–æ–≥–∏ QEMU –±—É–¥—É—Ç –≤ –∫–æ–Ω—Å–æ–ª–∏
\`\`\`

---

**–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞:** $ARCHITECTURE
**–°–æ–∑–¥–∞–Ω–æ:** $(date)
**DESQEMU:** https://github.com/the-homeless-god/desqemu
EOF

echo "‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–æ—Ä—Ç–∞—Ç–∏–≤–Ω–æ–≥–æ –∞—Ä—Ö–∏–≤–∞ –¥–ª—è $ARCHITECTURE"
cd "../.." 
