#!/bin/bash

echo "üöÄ DESQEMU Alpine Linux MicroVM Runner"
echo "====================================="

QCOW2_IMAGE="QCOW2_IMAGE_PLACEHOLDER"
QEMU_ARCH="QEMU_ARCH_PLACEHOLDER"
MEMORY="512M"

if [ ! -f "$QCOW2_IMAGE" ]; then
    echo "‚ùå QCOW2 –æ–±—Ä–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω: $QCOW2_IMAGE"
    echo "–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —Ñ–∞–π–ª –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏."
    exit 1
fi

if ! command -v qemu-system-$QEMU_ARCH &> /dev/null; then
    echo "‚ùå QEMU –¥–ª—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã $QEMU_ARCH –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    echo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: sudo apt-get install qemu-system-$QEMU_ARCH"
    exit 1
fi

echo "üíæ –û–±—Ä–∞–∑: $QCOW2_IMAGE ($(du -h $QCOW2_IMAGE | cut -f1))"
echo "üß† –ü–∞–º—è—Ç—å: $MEMORY"
echo "üåê –ü–æ—Ä—Ç—ã: 8080‚Üí8080, 5900‚Üí5900, 2222‚Üí22"
echo ""
echo "üîó –ü–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞:"
echo "   Web: http://localhost:8080"
echo "   VNC: localhost:5900"
echo "   SSH: ssh desqemu@localhost -p 2222"
echo ""

# Determine if we can use KVM (Linux only)
KVM_OPTS=""
if [[ "$OSTYPE" == "linux-gnu"* ]] && [ -r /dev/kvm ]; then
    KVM_OPTS="-enable-kvm -cpu host"
    echo "üöÄ –ò—Å–ø–æ–ª—å–∑—É–µ–º KVM —É—Å–∫–æ—Ä–µ–Ω–∏–µ"
else
    KVM_OPTS="-cpu max"
    echo "‚ö†Ô∏è KVM –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º —ç–º—É–ª—è—Ü–∏—é"
fi

echo "‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫–∞–µ–º QEMU MicroVM..."

# Start QEMU MicroVM with networking
qemu-system-$QEMU_ARCH \
    -M microvm,x-option-roms=off,isa-serial=off,rtc=off \
    -m $MEMORY \
    -no-acpi \
    $KVM_OPTS \
    -nodefaults \
    -no-user-config \
    -nographic \
    -no-reboot \
    -device virtio-serial-device \
    -chardev stdio,id=virtiocon0 \
    -device virtconsole,chardev=virtiocon0 \
    -drive id=root,file=$QCOW2_IMAGE,format=qcow2,if=none \
    -device virtio-blk-device,drive=root \
    -netdev user,id=mynet0,hostfwd=tcp:127.0.0.1:8080-:8080,hostfwd=tcp:127.0.0.1:5900-:5900,hostfwd=tcp:127.0.0.1:2222-:22 \
    -device virtio-net-device,netdev=mynet0 \
    -device virtio-rng-device 
