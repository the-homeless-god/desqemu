# Multi-stage build for better caching
# –ú–Ω–æ–≥–æ—ç—Ç–∞–ø–Ω–∞—è —Å–±–æ—Ä–∫–∞ –¥–ª—è –ª—É—á—à–µ–≥–æ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è

# Stage 1: Base system with packages
# –≠—Ç–∞–ø 1: –ë–∞–∑–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ —Å –ø–∞–∫–µ—Ç–∞–º–∏
FROM alpine:3.19 AS base

# Install system packages (this layer will be cached)
# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –ø–∞–∫–µ—Ç—ã (—ç—Ç–æ—Ç —Å–ª–æ–π –±—É–¥–µ—Ç –∫—ç—à–∏—Ä–æ–≤–∞–Ω)
RUN apk update && apk upgrade && \
    apk add --no-cache \
      podman \
      docker-cli \
      docker-compose \
      qemu-system-x86_64 \
      qemu-img \
      chromium \
      chromium-chromedriver \
      curl \
      wget \
      bash \
      git \
      nano \
      htop \
      openssh \
      openrc \
      shadow \
      sudo \
      dbus \
      python3 \
      py3-pip \
      nodejs \
      npm \
      xvfb \
      x11vnc \
      fluxbox \
      jq \
      netcat-openbsd \
      procps

# Stage 2: Python packages
# –≠—Ç–∞–ø 2: Python –ø–∞–∫–µ—Ç—ã
FROM base AS python-deps

# Install Python packages in virtual environment (separate layer for better caching)
# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Python –ø–∞–∫–µ—Ç—ã –≤ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–º –æ–∫—Ä—É–∂–µ–Ω–∏–∏ (–æ—Ç–¥–µ–ª—å–Ω—ã–π —Å–ª–æ–π –¥–ª—è –ª—É—á—à–µ–≥–æ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è)
RUN python3 -m venv /opt/venv && \
    . /opt/venv/bin/activate && \
    pip install podman-compose yq

# Add virtual environment to PATH
# –î–æ–±–∞–≤–ª—è–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –≤ PATH
ENV PATH="/opt/venv/bin:$PATH"

# Stage 3: Final image with configuration
# –≠—Ç–∞–ø 3: –§–∏–Ω–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–∑ —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
FROM python-deps AS final

# Basic image info / –ë–∞–∑–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–±—Ä–∞–∑–µ
LABEL org.opencontainers.image.title="DESQEMU Alpine with Podman"
LABEL org.opencontainers.image.description="Alpine Linux —Å –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º Podman, QEMU –∏ Chromium –¥–ª—è DESQEMU"
LABEL org.opencontainers.image.source="https://github.com/the-homeless-god/desqemu"
LABEL org.opencontainers.image.version="3.19"
LABEL org.opencontainers.image.licenses="BSD-3-Clause"

# Stage 4: User and system configuration
# –≠—Ç–∞–ø 4: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏ —Å–∏—Å—Ç–µ–º–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
FROM final AS configured

# Create main user for DESQEMU with sudo access
# –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è DESQEMU —Å –ø—Ä–∞–≤–∞–º–∏ sudo
RUN adduser -D -s /bin/bash desqemu && \
    echo "desqemu:desqemu" | chpasswd && \
    addgroup desqemu wheel && \
    addgroup docker && \
    addgroup desqemu docker && \
    echo "%wheel ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers

# Setup rootless podman support
# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ rootless podman
RUN echo "desqemu:100000:65536" >> /etc/subuid && \
    echo "desqemu:100000:65536" >> /etc/subgid

# Set root password for admin access / –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞—Ä–æ–ª—å root –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
RUN echo "root:root" | chpasswd

# Configure Podman to use common registries
# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Podman –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –æ–±—â–∏—Ö registry
RUN mkdir -p /home/desqemu/.config/containers
COPY --chown=desqemu:desqemu <<REGEOF /home/desqemu/.config/containers/registries.conf
unqualified-search-registries = ["docker.io"]

[[registry]]
location = "docker.io"

[[registry]]
location = "registry.fedoraproject.org"

[[registry]]
location = "quay.io"
REGEOF

# Note: podman machine init will be done in startup script as desqemu user
# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è podman machine –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –≤ —Å–∫—Ä–∏–ø—Ç–µ –∑–∞–ø—É—Å–∫–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è desqemu

# Stage 5: Scripts and configuration files
# –≠—Ç–∞–ø 5: –°–∫—Ä–∏–ø—Ç—ã –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
FROM configured AS scripts

# Create a welcome message that shows what's available
# –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö
COPY --chown=desqemu:desqemu <<PROFEOF /home/desqemu/.profile
echo "üê≥ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ DESQEMU Alpine Linux!"
echo "üì¶ Podman –≤–µ—Ä—Å–∏—è: \$(podman --version)"
echo "üñ•Ô∏è  QEMU –≤–µ—Ä—Å–∏—è: \$(qemu-system-x86_64 --version | head -1)"
echo "üåê Chromium –≤–µ—Ä—Å–∏—è: \$(chromium --version)"
echo "üöÄ –ì–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –∏ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π!"
echo ""
echo "–ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "  podman run hello-world                    - —Ç–µ—Å—Ç Podman"
echo "  podman ps                                 - —Å–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
echo "  chromium --headless --remote-debugging-port=9222 - headless Chromium"
echo "  startx                                    - –∑–∞–ø—É—Å–∫ X11 –æ–∫—Ä—É–∂–µ–Ω–∏—è"
echo "  ./auto-start-compose.sh                   - –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ docker-compose"
echo ""
PROFEOF

# Script to start X11 environment for GUI apps
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ X11 –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è GUI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
COPY --chown=desqemu:desqemu <<STARTXEOF /home/desqemu/start-desktop.sh
#!/bin/bash
export DISPLAY=:1
Xvfb :1 -screen 0 1024x768x16 &
sleep 2
fluxbox &
x11vnc -display :1 -forever -usepw -create &
echo "üñ•Ô∏è  –†–∞–±–æ—á–∏–π —Å—Ç–æ–ª –∑–∞–ø—É—â–µ–Ω –Ω–∞ display :1"
echo "üåê VNC –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 5900 (–ø–∞—Ä–æ–ª—å: desqemu)"
STARTXEOF

RUN chmod +x /home/desqemu/start-desktop.sh

# Script to automatically parse docker-compose.yml and start browser
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞ docker-compose.yml –∏ –∑–∞–ø—É—Å–∫–∞ –±—Ä–∞—É–∑–µ—Ä–∞
COPY --chown=desqemu:desqemu auto-start-compose.sh /home/desqemu/auto-start-compose.sh

RUN chmod +x /home/desqemu/auto-start-compose.sh

# Auto-start script for DESQEMU services (web server, VNC setup)
# –°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ DESQEMU (–≤–µ–±-—Å–µ—Ä–≤–µ—Ä, –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ VNC)
COPY <<APIEOF /etc/local.d/desqemu-services.start
#!/bin/sh

# Initialize and start podman machine as desqemu user
# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º podman machine –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è desqemu
su desqemu -c 'podman machine init --cpus 2 --memory 2048 --disk-size 20 || true'
su desqemu -c 'podman machine start || true'

# Start simple web server for DESQEMU interface
# –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –¥–ª—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ DESQEMU
su desqemu -c 'cd /home/desqemu && python3 -m http.server 8080 > /tmp/desqemu-web.log 2>&1 &'

# Set up VNC password for remote desktop access
# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–∞—Ä–æ–ª—å VNC –¥–ª—è —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ä–∞–±–æ—á–µ–º—É —Å—Ç–æ–ª—É
su desqemu -c 'mkdir -p /home/desqemu/.vnc && echo "desqemu" | vncpasswd -f > /home/desqemu/.vnc/passwd && chmod 600 /home/desqemu/.vnc/passwd'

# Auto-start compose if docker-compose.yml exists
# –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ compose –µ—Å–ª–∏ –µ—Å—Ç—å docker-compose.yml
if [ -f "/home/desqemu/docker-compose.yml" ]; then
    echo "üöÄ –û–±–Ω–∞—Ä—É–∂–µ–Ω docker-compose.yml, –∑–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏..."
    su desqemu -c '/home/desqemu/auto-start-compose.sh > /tmp/desqemu-compose.log 2>&1 &'
fi

echo "‚úÖ DESQEMU —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã"
APIEOF

RUN chmod +x /etc/local.d/desqemu-services.start

# Stage 6: Final image with services
# –≠—Ç–∞–ø 6: –§–∏–Ω–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–∑ —Å —Å–µ—Ä–≤–∏—Å–∞–º–∏
FROM scripts AS final-image

# Enable services to start automatically / –í–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
RUN rc-update add dbus default && \
    rc-update add sshd default && \
    rc-update add local default

# Open ports for web interface, SSH, and VNC
# –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ—Ä—Ç—ã –¥–ª—è –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞, SSH –∏ VNC
EXPOSE 8080 22 5900

# Set working directory and default user
# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
WORKDIR /home/desqemu
USER desqemu

# Default command / –ö–æ–º–∞–Ω–¥–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
CMD ["/bin/bash", "-l"] 
