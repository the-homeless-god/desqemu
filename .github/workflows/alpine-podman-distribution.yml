# ============================================================================
# GitHub Actions Workflow –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è DESQEMU –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤–æ–≤
# ============================================================================
#
# üèóÔ∏è –≠—Ç–æ—Ç workflow —Å–æ–∑–¥–∞–µ—Ç –¢–†–ò –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã—Ö —Ç–∏–ø–∞ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤:
#
# 1Ô∏è‚É£ –ü–û–†–¢–ê–¢–ò–í–ù–´–ï –ê–†–•–ò–í–´ (create-qemu-portable-archive):
#    üì¶ –°–∞–º–æ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–µ –∞—Ä—Ö–∏–≤—ã —Å QEMU –±–∏–Ω–∞—Ä–Ω–∏–∫–∞–º–∏
#    üîß –£—Å—Ç–∞–Ω–æ–≤–æ—á–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç—ã –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
#    üöÄ –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–∏–∫—Ä–æ-–í–ú –±–µ–∑ Docker
#
# 2Ô∏è‚É£ ALPINE –î–ò–°–¢–†–ò–ë–£–¢–ò–í (create-alpine-distribution):
#    üê≥ Docker –æ–±—Ä–∞–∑—ã —Å Alpine Linux + Podman
#    üìÅ Rootfs –∞—Ä—Ö–∏–≤—ã –¥–ª—è chroot –æ–∫—Ä—É–∂–µ–Ω–∏–π
#    üîÑ –°–æ–≤–º–µ—Å—Ç–∏–º—ã —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–Ω—ã–º–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞–º–∏
#
# 3Ô∏è‚É£ ALPINE QCOW2 –û–ë–†–ê–ó–´ (create-alpine-qcow2-images):
#    üíø QCOW2 –æ–±—Ä–∞–∑—ã –¥–ª—è QEMU –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã—Ö –º–∞—à–∏–Ω
#    üêß –ì–æ—Ç–æ–≤—ã–µ –∫ –∑–∞–≥—Ä—É–∑–∫–µ Alpine Linux –í–ú
#    üîß –°–æ–∑–¥–∞—é—Ç—Å—è —Å –ø–æ–º–æ—â—å—é alpine-make-vm-image
#
# ‚ö° –î–∂–æ–±—ã –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –ü–ê–†–ê–õ–õ–ï–õ–¨–ù–û –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è —Å–±–æ—Ä–∫–∏
# üîÑ –ß–µ—Ç–≤–µ—Ä—Ç–∞—è –¥–∂–æ–±–∞ (create-portable-release) –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –ø–µ—Ä–≤–æ–π
# ============================================================================

name: –°–æ–∑–¥–∞–Ω–∏–µ Alpine –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤–∞ —Å Podman

# When to run this workflow / –ö–æ–≥–¥–∞ –∑–∞–ø—É—Å–∫–∞—Ç—å —ç—Ç–æ—Ç workflow
on:
  push:
    branches: [master]
    paths:
      - ".github/workflows/alpine-podman-distribution.yml"
  pull_request:
    branches: [master]
    paths:
      - ".github/workflows/alpine-podman-distribution.yml"
  workflow_dispatch: # Manual trigger / –†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫
    inputs:
      alpine_version:
        description: "–í–µ—Ä—Å–∏—è Alpine Linux"
        required: false
        default: "3.19"
        type: string
      architecture:
        description: "–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞"
        required: false
        default: "x86_64"
        type: choice
        options:
          - "x86_64"
          - "aarch64"
          - "arm64"
          - "amd64"

env:
  ALPINE_VERSION: ${{ github.event.inputs.alpine_version || '3.19' }}

jobs:


  build-desktop-app:
    name: üñ•Ô∏è –°–±–æ—Ä–∫–∞ Desktop –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: üì• –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–¥–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è | Get repository code
        uses: actions/checkout@v4

      - name: üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js | Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: desqemu-desktop/package.json

      - name: üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π | Install dependencies
        run: |
          cd desqemu-desktop
          npm install
          npm install -g @neutralinojs/neu

      - name: üî® –°–±–æ—Ä–∫–∞ Desktop –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è | Build desktop app
        run: |
          cd desqemu-desktop
          neu update
          neu build --release
          
          # –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ –¥–ª—è —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è
          cd dist
          tar -czf "../../desqemu-desktop-linux-x64.tar.gz" .
          cd ..
          
          echo "‚úÖ Desktop –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–±—Ä–∞–Ω–æ"

      - name: ‚¨ÜÔ∏è Desktop App ‚Üí GitHub Artifacts | Upload desktop app to artifacts
        uses: actions/upload-artifact@v4
        with:
          name: desqemu-desktop
          path: |
            desqemu-desktop-linux-x64.tar.gz
          retention-days: 30

  create-alpine-distribution:
    name: –°–æ–∑–¥–∞–Ω–∏–µ Alpine –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤–∞ (Docker + Rootfs + QCOW2 + Portable)
    runs-on: ubuntu-latest
    needs: [build-desktop-app]
    strategy:
      matrix:
        architecture: [x86_64]
        include:
          - architecture: x86_64
            platform: linux/amd64
    permissions:
      contents: write
      packages: write
    steps:
      - name: üì• –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–¥–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è | Get repository code
        uses: actions/checkout@v4

      - name: üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π | Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget curl xz-utils qemu-utils fdisk e2fsprogs dosfstools

      - name: üê≥ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Docker Buildx | Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: üî® –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ Dockerfile –¥–ª—è CI/CD | Prepare Dockerfile for CI/CD
        run: |
          echo "üê≥ –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º Dockerfile –¥–ª—è CI/CD..."

          # Update Dockerfile with correct Alpine version
          # –û–±–Ω–æ–≤–ª—è–µ–º Dockerfile —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–µ–π Alpine
          sed -i "s/FROM alpine:3.19/FROM alpine:${{ env.ALPINE_VERSION }}/" Dockerfile

          # Update labels with correct version
          # –û–±–Ω–æ–≤–ª—è–µ–º –º–µ—Ç–∫–∏ —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–µ–π
          sed -i "s/version=\"3.19\"/version=\"${{ env.ALPINE_VERSION }}\"/" Dockerfile

      - name: üèóÔ∏è –°–±–æ—Ä–∫–∞ Alpine –æ–±—Ä–∞–∑–∞ | Build Alpine image
        run: |
          echo "üî® –°–æ–±–∏—Ä–∞–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–π Alpine –æ–±—Ä–∞–∑ –¥–ª—è ${{ matrix.platform }}..."
          echo "üìã –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:"
          echo "   ‚Ä¢ matrix.architecture: ${{ matrix.architecture }}"
          echo "   ‚Ä¢ matrix.platform: ${{ matrix.platform }}"
          echo "   ‚Ä¢ env.ALPINE_VERSION: ${{ env.ALPINE_VERSION }}"
          
          IMAGE_NAME="ghcr.io/${{ github.repository_owner }}/desqemu-alpine"
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ platform –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞
          if [ -z "${{ matrix.platform }}" ]; then
            echo "‚ùå –û—à–∏–±–∫–∞: matrix.platform –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞!"
            exit 1
          fi
          
          docker buildx build --platform ${{ matrix.platform }} --target final-image \
            -t desqemu-alpine:latest \
            -t "$IMAGE_NAME:latest" \
            --load .

          echo "‚úÖ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
          echo "üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –æ–±—Ä–∞–∑—ã:"
          docker images | grep desqemu-alpine

      - name: üöÄ –ü—É—à –≤ GitHub Container Registry | Push to GitHub Container Registry
        run: |
          echo "üöÄ –ü—É—à–∏–º –æ–±—Ä–∞–∑ –≤ GitHub Container Registry..."

          # Login to GitHub Container Registry using GITHUB_TOKEN
          # –õ–æ–≥–∏–Ω–∏–º—Å—è –≤ GitHub Container Registry –∏—Å–ø–æ–ª—å–∑—É—è GITHUB_TOKEN
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

          # Tag image for GitHub Container Registry
          # –û–±–≤–µ—à–∏–≤–∞–µ–º —Ç–µ–≥–æ–º –æ–±—Ä–∞–∑ –¥–ª—è GitHub Container Registry
          IMAGE_NAME="ghcr.io/${{ github.repository_owner }}/desqemu-alpine"

          # Build and push with platform-specific tags
          # –°–æ–±–∏—Ä–∞–µ–º –∏ –ø—É—à–∏–º —Å –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ-—Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–º–∏ —Ç–µ–≥–∞–º–∏
          docker buildx build --platform ${{ matrix.platform }} --target final-image \
            -t "$IMAGE_NAME:latest" \
            -t "$IMAGE_NAME:${{ env.ALPINE_VERSION }}" \
            -t "$IMAGE_NAME:${{ env.ALPINE_VERSION }}-${{ matrix.architecture }}" \
            --push .

          echo "‚úÖ –û–±—Ä–∞–∑ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –≤ ghcr.io/${{ github.repository_owner }}/desqemu-alpine"
          echo "üì• –î–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: docker pull ghcr.io/${{ github.repository_owner }}/desqemu-alpine:latest"

      - name: üì¶ –≠–∫—Å–ø–æ—Ä—Ç –≤ rootfs –¥–ª—è chroot | Export to rootfs for chroot
        run: |
          echo "üì¶ –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–∑ –≤ rootfs..."

          # Use the locally built image instead of pulling from GHCR
          # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω–æ —Å–æ–±—Ä–∞–Ω–Ω—ã–π –æ–±—Ä–∞–∑ –≤–º–µ—Å—Ç–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∏–∑ GHCR
          IMAGE_NAME="desqemu-alpine:latest"

          # Check if image exists
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–∑–∞
          if ! docker image inspect "$IMAGE_NAME" >/dev/null 2>&1; then
            echo "‚ùå –û–±—Ä–∞–∑ $IMAGE_NAME –Ω–µ –Ω–∞–π–¥–µ–Ω!"
            echo "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –æ–±—Ä–∞–∑—ã:"
            docker images
            exit 1
          fi

          echo "‚úÖ –û–±—Ä–∞–∑ $IMAGE_NAME –Ω–∞–π–¥–µ–Ω"

          # Create container and export its filesystem to a temporary directory
          # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –µ–≥–æ —Ñ–∞–π–ª–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
          mkdir -p rootfs-temp
          CONTAINER_ID=$(docker create "$IMAGE_NAME")
          docker export $CONTAINER_ID | tar -C rootfs-temp -x
          docker rm $CONTAINER_ID

          # Create rootfs archive (exclude virtual filesystems)
          # –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤ rootfs (–∏—Å–∫–ª—é—á–∞–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª–æ–≤—ã–µ —Å–∏—Å—Ç–µ–º—ã)
          cd rootfs-temp
          tar -czf "../desqemu-alpine-rootfs-${{ env.ALPINE_VERSION }}-${{ matrix.architecture }}.tar.gz" \
            --exclude='./dev/*' \
            --exclude='./proc/*' \
            --exclude='./sys/*' \
            --exclude='./tmp/*' \
            --exclude='./run/*' \
            --exclude='./mnt/*' \
            --exclude='./media/*' \
            --exclude='./.dockerenv' \
            .
          cd ..

          # Clean up temporary files / –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
          rm -rf rootfs-temp

          echo "‚úÖ Rootfs —Å–æ–∑–¥–∞–Ω: $(du -h desqemu-alpine-rootfs-*.tar.gz | cut -f1)"

      - name: üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ Docker –æ–±—Ä–∞–∑–∞ | Save Docker image
        run: |
          echo "üê≥ –°–æ—Ö—Ä–∞–Ω—è–µ–º Docker –æ–±—Ä–∞–∑..."
          IMAGE_NAME="desqemu-alpine:latest"

          # Check if image exists
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–∑–∞
          if ! docker image inspect "$IMAGE_NAME" >/dev/null 2>&1; then
            echo "‚ùå –û–±—Ä–∞–∑ $IMAGE_NAME –Ω–µ –Ω–∞–π–¥–µ–Ω!"
            echo "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –æ–±—Ä–∞–∑—ã:"
            docker images
            exit 1
          fi

          echo "‚úÖ –û–±—Ä–∞–∑ $IMAGE_NAME –Ω–∞–π–¥–µ–Ω"
          docker save "$IMAGE_NAME" | gzip > desqemu-alpine-docker-${{ env.ALPINE_VERSION }}-${{ matrix.architecture }}.tar.gz
          echo "‚úÖ Docker –æ–±—Ä–∞–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω: $(du -h desqemu-alpine-docker-*.tar.gz | cut -f1)"

      - name: üìö –°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ | Create documentation
        run: |
          echo "üìö –°–æ–∑–¥–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –∏ —Å–∫—Ä–∏–ø—Ç—ã..."
          chmod +x scripts/create-all-docs.sh
          scripts/create-all-docs.sh ${{ env.ALPINE_VERSION }} ${{ matrix.architecture }} ${{ github.repository_owner }}

      - name: ‚¨ÜÔ∏è Docker –æ–±—Ä–∞–∑ ‚Üí GitHub Artifacts | Upload Docker image to GitHub Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: desqemu-alpine-docker-${{ env.ALPINE_VERSION }}-${{ matrix.architecture }}
          path: |
            desqemu-alpine-docker-${{ env.ALPINE_VERSION }}-${{ matrix.architecture }}.tar.gz
            quick-start-docker.sh
            quick-start-with-compose.sh
            DESQEMU-Alpine-README.md
          retention-days: 30

      - name: ‚¨ÜÔ∏è Rootfs ‚Üí GitHub Artifacts | Upload rootfs to GitHub Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: desqemu-alpine-rootfs-${{ env.ALPINE_VERSION }}-${{ matrix.architecture }}
          path: |
            desqemu-alpine-rootfs-${{ env.ALPINE_VERSION }}-${{ matrix.architecture }}.tar.gz
            quick-start-rootfs.sh
            quick-start-with-compose.sh
            DESQEMU-Alpine-README.md
          retention-days: 30

      - name: üîß –ó–∞–≥—Ä—É–∑–∫–∞ NBD –º–æ–¥—É–ª—è | Load NBD kernel module
        run: sudo modprobe nbd max_part=16

      - name: üöÄ –°–æ–∑–¥–∞–Ω–∏–µ QCOW2 –æ–±—Ä–∞–∑–∞ | Create QCOW2 image
        run: |
          echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±–æ—Ä–∫—É QCOW2 –æ–±—Ä–∞–∑–∞ –¥–ª—è ${{ matrix.architecture }}..."
          chmod +x scripts/create-alpine-qcow2.sh
          scripts/create-alpine-qcow2.sh ${{ matrix.architecture }} ${{ env.ALPINE_VERSION }}

      - name: ‚¨ÜÔ∏è QCOW2 –æ–±—Ä–∞–∑ ‚Üí GitHub Artifacts | Upload QCOW2 image to GitHub Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: desqemu-alpine-qcow2-${{ matrix.architecture }}
          path: |
            desqemu-alpine-qcow2-${{ matrix.architecture }}.qcow2
            quick-start-qcow2.sh
          retention-days: 30

      - name: üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Ä—Ç–∞—Ç–∏–≤–Ω–æ–≥–æ –∞—Ä—Ö–∏–≤–∞ | Create portable archive
        run: |
          echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±–æ—Ä–∫—É –ø–æ—Ä—Ç–∞—Ç–∏–≤–Ω–æ–≥–æ –∞—Ä—Ö–∏–≤–∞ –¥–ª—è ${{ matrix.architecture }}..."
          chmod +x scripts/build-portable.sh
          scripts/build-portable.sh ${{ matrix.architecture }}

      - name: üõ†Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–≥–æ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫–∞ | Create universal installer
        run: |
          echo "üõ†Ô∏è –°–æ–∑–¥–∞–µ–º —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫..."
          chmod +x scripts/create-universal-installer.sh
          scripts/create-universal-installer.sh

      - name: ‚¨ÜÔ∏è –ü–æ—Ä—Ç–∞—Ç–∏–≤–Ω—ã–π –∞—Ä—Ö–∏–≤ ‚Üí GitHub Artifacts | Upload portable archive to GitHub Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: desqemu-portable-microvm-${{ matrix.architecture }}
          path: |
            desqemu-portable-microvm-${{ matrix.architecture }}.tar.gz
            install-desqemu-portable-${{ matrix.architecture }}.sh
            install-desqemu-portable.sh
          retention-days: 30

      - name: ‚¨ÜÔ∏è Release notes ‚Üí Artifacts | Upload release notes to artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-notes
          path: release-notes.md
          retention-days: 7

      - name: üì¶ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ Desktop App | Download desktop app
        uses: actions/download-artifact@v4
        with:
          name: desqemu-desktop
          path: .


      - name: üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–∞—Ö | Information about created files
        run: |
          echo "üìã –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:"
          ls -la *.qcow2 *.tar.gz *.sh *.md 2>/dev/null || echo "–§–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
          
          echo ""
          echo "üìä –†–∞–∑–º–µ—Ä—ã —Ñ–∞–π–ª–æ–≤:"
          du -h *.qcow2 *.tar.gz 2>/dev/null || echo "–§–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
          
          echo ""
          echo "‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã —Å–æ–∑–¥–∞–Ω—ã –∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ GitHub Artifacts"
          echo "üì• –î–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"



  create-portable-release:
    name: –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞ –ø–æ—Ä—Ç–∞—Ç–∏–≤–Ω—ã—Ö –∞—Ä—Ö–∏–≤–æ–≤
    runs-on: ubuntu-latest
    needs: [create-alpine-distribution]
    permissions:
      contents: write
    steps:
      - name: üì• –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–¥–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è | Get repository code
        uses: actions/checkout@v4

      - name: üì¶ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ | Download all artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: |
            desqemu-portable-microvm-*
            desqemu-desktop
          merge-multiple: true

      - name: üìù –°–æ–∑–¥–∞–Ω–∏–µ release notes –¥–ª—è –ø–æ—Ä—Ç–∞—Ç–∏–≤–Ω—ã—Ö –∞—Ä—Ö–∏–≤–æ–≤ | Create release notes for portable archives
        run: |
          echo "üìù –°–æ–∑–¥–∞–µ–º release notes –¥–ª—è –ø–æ—Ä—Ç–∞—Ç–∏–≤–Ω—ã—Ö –∞—Ä—Ö–∏–≤–æ–≤..."
          chmod +x scripts/create-portable-release-notes.sh
          scripts/create-portable-release-notes.sh "${{ github.repository }}" "${{ github.ref_name }}" "${{ github.repository_owner }}" "${{ github.server_url }}"

      - name: üè∑Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ GitHub Release –¥–ª—è –ø–æ—Ä—Ç–∞—Ç–∏–≤–Ω—ã—Ö –∞—Ä—Ö–∏–≤–æ–≤ | Create GitHub Release for portable archives
        uses: softprops/action-gh-release@v1
        with:
          name: "üöÄ DESQEMU Portable MicroVM ${{ github.ref_name }}"
          body_path: portable-release-notes.md
          files: |
            desqemu-portable-microvm-*.tar.gz
            install-desqemu-portable-*.sh
            install-desqemu-portable.sh
            desqemu-desktop-linux-x64.tar.gz
          tag_name: "${{ github.ref_name }}-portable"
          draft: false
          prerelease: false
          make_latest: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
